@Article{Spi16g,
	title={A Repository of {U}nix {H}istory and Evolution},
	author = {Diomidis Spinellis},
	year={2017},
	journal={Empirical Software Engineering},
	volume=22,
	number=3,
	pages="1372--1404",
	DOI="10.1007/s10664-016-9445-5",
	publisher={Springer US},
	ISSN =       {1382-3256},
}
@COMMENT{
URL=    "http://www.spinellis.gr/pubs/jrnl/2016-EMPSE-unix-history/html/unix-history.html",
}

@book{AbelsonS85,
	author    = {Harold Abelson and
				Gerald J. Sussman},
	title     = {Structure and Interpretation of Computer Programs},
	publisher = {{MIT} Press},
	year      = {1985},
	isbn      = {0-262-51036-7}
}
@COMMENT{
timestamp = {Thu, 03 Jan 2002 00:00:00 +0100},
	biburl    = {https://dblp.org/rec/bib/books/mit/AbelsonS85},
	bibsource = {dblp computer science bibliography, https://dblp.org}
}

@misc{gplv3,
	title        = {GNU General Public License},
	version      = {3},
	shorthand    = {GPL},
	organization = {Free Software Foundation},
	url          = {http://www.gnu.org/licenses/gpl.html},
	pagination   = {section},
	language     = {english},
	date         = {2007-06-29}
  }

@ARTICLE {Shustek06,
	author = {L. Shustek},
	journal = {IEEE Annals of the History of Computing},
	title = {What Should We Collect to Preserve the History of Software?},
	year = {2006},
	volume = {28},
	number = {04},
	issn = {1058-6180},
	pages = {112, 110-111},
	keywords = {preserving software;source code repository;software history;history of programming},
	doi = {10.1109/MAHC.2006.78},
	publisher = {IEEE Computer Society},
	address = {Los Alamitos, CA, USA},
	month = 10
}

@article{SoftwareCitation2016,
	Author = {Arfon M. Smith and Daniel S. Katz and Kyle E. Niemeyer and {FORCE11 Software Citation Working Group}},
	Date-Modified = {2016-03-23 18:02:37 +0000},
	Journal = {PeerJ Preprints},
	Volume = {4},
	Pages = {e2169v3},
	Doi = {10.7287/peerj.preprints.2169v3},
	Title = {Software Citation Principles},
	Year = {2016}
}

@misc{wiki:Wikimedia_movement,
   author = "Wikipedia",
   title = "{Wikimedia movement} --- {W}ikipedia{,} The Free Encyclopedia",
   year = "2019",
   howpublished = {\url{http://en.wikipedia.org/w/index.php?title=Wikimedia\%20movement&oldid=895312125}},
   note = "[Online; accessed 08-May-2019]"
}
@misc{CodeMeta,
   author = "CodeMeta",
   title = "{The CodeMeta Project}",
   howpublished = {\url{https://codemeta.github.io/index.html}},
   note = "[Online; accessed 08-May-2019]"
}

@Article{         swhcacm2018,
  author        = {Abramatic, Jean-Fran\c{c}ois and Di Cosmo, Roberto and
                  Zacchiroli, Stefano},
  title         = {Building the Universal Archive of Source Code},
  journal       = {Commun. ACM},
  issue_date    = {October 2018},
  volume        = {61},
  number        = {10},
  month         = sep,
  year          = {2018},
  issn          = {0001-0782},
  pages         = {29--31},
  numpages      = {3},
  url           = {http://doi.acm.org/10.1145/3183558},
  doi           = {10.1145/3183558},
  acmid         = {3183558},
  publisher     = {ACM},
  address       = {New York, NY, USA}
}

@MISC{Spectrum,
    author = {Edited Gordon Mckenna and Efthymia Patsatzi and Cb Jp},
    title = {The UK Museum Documentation Standard SPECTRUM: The UK Museum Documentation Standard Revised with the participation of the museum community},
    year = {2009}
}

@article{Attardi1998,
author = {Attardi, Giuseppe and Flagella, Tito and Iglio, Pietro},
title = {A customisable memory management framework for C++},
journal = {Software: Practice and Experience},
volume = {28},
number = {11},
pages = {1143-1184},
keywords = {Memory management, garbage collection, C++},
doi = {10.1002/(SICI)1097-024X(199809)28:11<1143::AID-SPE194>3.0.CO;2-7},
year = {1998}
}
@COMMENT{
url = {https://onlinelibrary.wiley.com/doi/abs/10.1002/%28SICI%291097-024X%28199809%2928%3A11%3C1143%3A%3AAID-SPE194%3E3.0.CO%3B2-7},
eprint = {https://onlinelibrary.wiley.com/doi/pdf/10.1002/%28SICI%291097-024X%28199809%2928%3A11%3C1143%3A%3AAID-SPE194%3E3.0.CO%3B2-7},
abstract = {Abstract Automatic garbage collection relieves programmers from the burden of managing memory themselves and several techniques have been developed that make garbage collection feasible in many situations, including real time applications or within traditional programming languages. However, optimal performance cannot always be achieved by a uniform general purpose solution. Sometimes an algorithm exhibits a predictable pattern of memory usage that could be better handled specifically, delaying as much as possible the intervention of the general purpose collector. This leads to the requirement for algorithm specific customisation of the collector strategies. We present a dynamic memory management framework which can be customised to the needs of an algorithm, while preserving the convenience of automatic collection in the normal case. The Customisable Memory Manager (CMM) organises memory in multiple heaps. Each heap is an instance of C++ class which abstracts and encapsulates a particular storage discipline. The default heap for collectable objects uses the technique of mostly copying garbage collection, providing good performance and memory compaction. Customisation of the collector is achieved exploiting object orientation by defining specialised versions of the collector methods for each heap class. The object-oriented interface to the collector enables coexistence and coordination among the various collectors as well as integration with traditional code unaware of garbage collection. The CMM is implemented in C++ without any special support in the language or the compiler. The techniques used in the CMM are general enough to be applicable also to other languages. The performance of the CMM is analysed and compared to other conservative collectors for C/C++ in various configurations. Â© 1998 John Wiley \& Sons, Ltd.},,
}

@inproceedings{NenciniGBCT86,
  author    = {G. Nencini and
               Pietro Grossi and
               Graziano Bertini and
               C. Camilleri and
               Leonello Tarabella},
  title     = {{TELETAU:} {A} Computer Music Permanent Service},
  booktitle = {Proceedings of the 1986 International Computer Music Conference, {ICMC}
               1986, Den Haag, The Netherlands, October 20-24, 1986},
  year      = {1986},
  timestamp = {Wed, 17 Feb 2016 13:13:04 +0100},
  biburl    = {https://dblp.org/rec/bib/conf/icmc/NenciniGBCT86},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}
@COMMENT{
  url       = {http://hdl.handle.net/2027/spo.bbp2372.1986.087},
  crossref  = {DBLP:conf/icmc/1986}
}